<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="df/df5/namespace_modular">
<title>Modular</title>
        <simplesect>
            <title> Classes </title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="d3/d10/class_modular_1_1_application">Modular::Application</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="dd/d93/class_modular_1_1_constraint">Modular::Constraint</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="d6/d68/class_modular_1_1_controller">Modular::Controller</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="db/d33/class_modular_1_1_debugger">Modular::Debugger</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="d9/d15/class_modular_1_1_email_logger">Modular::EmailLogger</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="d4/df0/class_modular_1_1_string_field_extension">Modular::StringFieldExtension</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="d1/da3/class_modular_1_1_model_extension">Modular::ModelExtension</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="db/d39/class_modular_1_1_form">Modular::Form</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="df/d92/class_modular_1_1_logger">Modular::Logger</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="db/d0a/class_modular_1_1_model">Modular::Model</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="da/d08/class_modular_1_1_object">Modular::Object</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="d4/d0d/class_modular_1_1_permission">Modular::Permission</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="d1/df3/class_modular_1_1_scoped_reference">Modular::ScopedReference</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="d5/d67/class_modular_1_1_task">Modular::Task</link></para>
                    </listitem>
                </itemizedlist>
            </para>
        </simplesect>
        <simplesect>
            <title> Namespaces </title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="d7/d04/namespace_modular_1_1_admin">Modular::Admin</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="df/dee/namespace_modular_1_1_behaviours">Modular::Behaviours</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="dd/d29/namespace_modular_1_1_collections">Modular::Collections</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="d9/d08/namespace_modular_1_1_controllers">Modular::Controllers</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="de/d82/namespace_modular_1_1_exceptions">Modular::Exceptions</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="de/dfe/namespace_modular_1_1_extensions">Modular::Extensions</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="d4/d8c/namespace_modular_1_1_forms">Modular::Forms</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="d3/d7f/namespace_modular_1_1_grid_field">Modular::GridField</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="dd/dfc/namespace_modular_1_1_helpers">Modular::Helpers</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="d5/d56/namespace_modular_1_1_interfaces">Modular::Interfaces</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="d0/da1/namespace_modular_1_1_models">Modular::Models</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="d1/dbf/namespace_modular_1_1_traits">Modular::Traits</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="da/dfe/namespace_modular_1_1_u_i">Modular::UI</link></para>
                    </listitem>
                </itemizedlist>
            </para>
        </simplesect>
        <simplesect>
            <title>Detailed Description</title>

<para>Filters limit what models are displayed on page depending on user selection, they can further restrict models after Constraints are applied.</para>

<para>A modular <link linkend="db/d0a/class_modular_1_1_model">Model</link> always controls one primary model type. It expects at least $ModelClass URL param and optionally $ModelID if a single model is being addressed. If no ID then a list of the models can be provided.</para>

<para><link linkend="d3/d10/class_modular_1_1_application">Application</link> level exceptions should throw this, e.g. bad paths or database credentials.</para>

<para>Add to application ContentControllers to get <link linkend="df/df5/namespace_modular">Modular</link> functionality such as requirements.</para>

<para>Extension added to ModelController</para>

<para>Interface Action generally implemented by an extension which is attached to a <link linkend="db/d0a/class_modular_1_1_model">Model</link> or a <link linkend="d6/d68/class_modular_1_1_controller">Controller</link>, such as one which implements a &apos;like&apos; or &apos;delete&apos; operation, via a route such as &apos;person/$ID/like&apos;.</para>

<para>Declare an interface for exceptions for RTTI and type-hinting, inspection reports etc</para>

<para>Interface HasLinks for models which have one or more links, either internal or external.</para>

<para>Interface LinkType implemented by models which can be linked to with different link types, such as a &apos;Download&apos;, &apos;Page&apos; or &apos;Video&apos;</para>

<para>Interface RouteProvider implemented by <link linkend="d6/d68/class_modular_1_1_controller">Controller</link> <link linkend="de/dfe/namespace_modular_1_1_extensions">Extensions</link> which provide rules to Director to route to the extended <link linkend="d6/d68/class_modular_1_1_controller">Controller</link>.</para>

<para><link linkend="db/d0a/class_modular_1_1_model">Model</link></para>

<para>Class which adds can methods e.g. canEdit, canDiscombobulate etc</para>

<para>Add this trait to models or model extensions to notify any &apos;backward&apos; related models (via has_one back to has_many or via belongs_many_many) when events happen on the model. For example add to a &apos;Block&apos; model to ensure that the blocks &apos;owners&apos; (Page or a containing block) get notified when the block itself is changed.</para>

<para>Return an instance of class nominated in the called classes config.custom_class_name or the called class if not set. This can be called from a create method overriding the standard silverstripe create method.</para>

<para>Return a collection class derived from  instead of a . The class is nominated in the exhibiting classes config.custom_list_class_name and custom_get can be called from the a method overriding the standard SilverStripe get method.</para>

<para>Simple trait to send an email via a &apos;notify&apos; method.</para>

<para>Manage enable/disable status through configuration. By default static config.enabled is checked, if can be overridden by defining a constant &apos;EnablerConfigVar&apos; on the exhibiting model, e.g. for if the default &apos;enabled&apos; is being used elsewhere in heirarchy.</para>

<para>Class json helper traa</para>

<para>Trait adds simple md5 hashing functions</para>

<para>owned, has an owner and invoking this object will invoke the call on the owner, e.g. $this()-&gt;doSomething() will call $this-&gt;owner()-&gt;doSomething()</para>

<para>Tools for dealing with relationships in SilverStripe</para>

<para>Trait adds functionality for dealing with upload fields </para>
                <para>Definition at line 1 of file [generated]</para>
                <para>The Documentation for this struct was generated from the following file: </para>
                <para><itemizedlist><listitem><para>[generated]</para></listitem></itemizedlist></para>
        </simplesect>
</section>
