<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="df/df5/namespace_modular" kind="namespace">
    <compoundname>Modular</compoundname>
    <innerclass refid="d3/d10/class_modular_1_1_application" prot="public">Modular::Application</innerclass>
    <innerclass refid="d6/d68/class_modular_1_1_controller" prot="public">Modular::Controller</innerclass>
    <innerclass refid="db/d33/class_modular_1_1_debugger" prot="public">Modular::Debugger</innerclass>
    <innerclass refid="d9/d15/class_modular_1_1_email_logger" prot="public">Modular::EmailLogger</innerclass>
    <innerclass refid="d5/dc7/class_modular_1_1_keyword_attribute_extension" prot="public">Modular::KeywordAttributeExtension</innerclass>
    <innerclass refid="d8/dc1/class_modular_1_1_link_attribute_field" prot="public">Modular::LinkAttributeField</innerclass>
    <innerclass refid="d0/d69/class_modular_1_1_content_controller_extension" prot="public">Modular::ContentControllerExtension</innerclass>
    <innerclass refid="d4/df0/class_modular_1_1_string_field_extension" prot="public">Modular::StringFieldExtension</innerclass>
    <innerclass refid="d1/da3/class_modular_1_1_model_extension" prot="public">Modular::ModelExtension</innerclass>
    <innerclass refid="db/d39/class_modular_1_1_form" prot="public">Modular::Form</innerclass>
    <innerclass refid="db/d0a/class_modular_1_1_model" prot="public">Modular::Model</innerclass>
    <innerclass refid="d6/d4d/class_modular_1_1_module" prot="public">Modular::Module</innerclass>
    <innerclass refid="da/d08/class_modular_1_1_object" prot="public">Modular::Object</innerclass>
    <innerclass refid="da/da6/class_modular_1_1_versioned_model" prot="public">Modular::VersionedModel</innerclass>
    <innernamespace refid="d7/d04/namespace_modular_1_1_admin">Modular::Admin</innernamespace>
    <innernamespace refid="df/dee/namespace_modular_1_1_behaviours">Modular::Behaviours</innernamespace>
    <innernamespace refid="d2/db0/namespace_modular_1_1_blocks">Modular::Blocks</innernamespace>
    <innernamespace refid="dd/d29/namespace_modular_1_1_collections">Modular::Collections</innernamespace>
    <innernamespace refid="de/d82/namespace_modular_1_1_exceptions">Modular::Exceptions</innernamespace>
    <innernamespace refid="de/dfe/namespace_modular_1_1_extensions">Modular::Extensions</innernamespace>
    <innernamespace refid="dd/ddb/namespace_modular_1_1_fields">Modular::Fields</innernamespace>
    <innernamespace refid="d4/d8c/namespace_modular_1_1_forms">Modular::Forms</innernamespace>
    <innernamespace refid="d3/d7f/namespace_modular_1_1_grid_field">Modular::GridField</innernamespace>
    <innernamespace refid="de/d4d/namespace_modular_1_1_grid_list">Modular::GridList</innernamespace>
    <innernamespace refid="dd/dfc/namespace_modular_1_1_helpers">Modular::Helpers</innernamespace>
    <innernamespace refid="d5/d56/namespace_modular_1_1_interfaces">Modular::Interfaces</innernamespace>
    <innernamespace refid="d0/da1/namespace_modular_1_1_models">Modular::Models</innernamespace>
    <innernamespace refid="d6/ddb/namespace_modular_1_1_relationships">Modular::Relationships</innernamespace>
    <innernamespace refid="d3/d03/namespace_modular_1_1_search">Modular::Search</innernamespace>
    <innernamespace refid="dd/d84/namespace_modular_1_1_workflows">Modular::Workflows</innernamespace>
      <sectiondef kind="var">
      <memberdef kind="variable" id="df/df5/namespace_modular_1ab11747a6bd94b097d49ecab7edd4dc70" prot="public" static="no" mutable="no">
        <type>trait</type>
        <definition>trait lang</definition>
        <argsstring></argsstring>
        <name>lang</name>
        <initializer>{
	abstract public function __invoke()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/storage/build/modular-all/develop/modular/code/traits/lang.php" line="6" column="1" bodyfile="/mnt/storage/build/modular-all/develop/modular/code/traits/lang.php" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="df/df5/namespace_modular_1a7ee0323274d4232ae304087ace72d82b" prot="public" static="no" mutable="no">
        <type>trait</type>
        <definition>trait options</definition>
        <argsstring></argsstring>
        <name>options</name>
        <initializer>{
	private $options = []</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/storage/build/modular-all/develop/modular/code/traits/options.php" line="4" column="1" bodyfile="/mnt/storage/build/modular-all/develop/modular/code/traits/options.php" bodystart="4" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="df/df5/namespace_modular_1a5c907a6211e0669e5fe3c298d12906ce" prot="public" static="no" mutable="no">
        <type>trait</type>
        <definition>trait related</definition>
        <argsstring></argsstring>
        <name>related</name>
        <initializer>{
	
	abstract public function config()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/storage/build/modular-all/develop/modular/code/traits/related.php" line="8" column="1" bodyfile="/mnt/storage/build/modular-all/develop/modular/code/traits/related.php" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="df/df5/namespace_modular_1aab380e91a6e89eb7d572417a59dbdbdc" prot="public" static="no" mutable="no">
        <type>trait</type>
        <definition>trait upload</definition>
        <argsstring></argsstring>
        <name>upload</name>
        <initializer>{
	abstract public function __invoke()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/storage/build/modular-all/develop/modular/code/traits/upload.php" line="13" column="1" bodyfile="/mnt/storage/build/modular-all/develop/modular/code/traits/upload.php" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="df/df5/namespace_modular_1a7065c899caaecfa2715f088effe2dd08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Modular\lang</definition>
        <argsstring>($key, $default= &apos;&apos;, array $tokens=[])</argsstring>
        <name>lang</name>
        <param>
          <declname>$key</declname>
        </param>
        <param>
          <declname>$default</declname>
          <defval>&apos;&apos;</defval>
        </param>
        <param>
          <type>array</type>
          <declname>$tokens</declname>
          <defval>[]</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/storage/build/modular-all/develop/modular/code/traits/lang.php" line="9" column="1" bodyfile="/mnt/storage/build/modular-all/develop/modular/code/traits/lang.php" bodystart="9" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="df/df5/namespace_modular_1a8d44ba7b602cd8a487c8336e730e2a5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Modular\fieldDecoration</definition>
        <argsstring>($fieldName, $decoration= &apos;Label&apos;, $default= &apos;&apos;, array $tokens=[], $field=null)</argsstring>
        <name>fieldDecoration</name>
        <param>
          <declname>$fieldName</declname>
        </param>
        <param>
          <declname>$decoration</declname>
          <defval>&apos;Label&apos;</defval>
        </param>
        <param>
          <declname>$default</declname>
          <defval>&apos;&apos;</defval>
        </param>
        <param>
          <type>array</type>
          <declname>$tokens</declname>
          <defval>[]</defval>
        </param>
        <param>
          <declname>$field</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Load message from lang.yml for the extension class (e.g. ImageField) and then the extended class (e.g. FullWidthImageBlock) which may override.</para><para>If not found in lang file use the default.</para><para>Replaces tokens in message as usual merging in some default tokens, such as singular and plural names and the field Title as &apos;label&apos;.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>string</parametertype>
<parametername>$fieldName</parametername>
</parameternamelist>
<parameterdescription>
<para>- name of field as it is on the form, e.g. &apos;Title&apos;, &apos;ImageID&apos; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametertype>string</parametertype>
<parametername>$decoration</parametername>
</parameternamelist>
<parameterdescription>
<para>- what decoration for the field, e.g. &apos;Title&apos;, &apos;Placeholder&apos;, &apos;Guide&apos; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametertype>string</parametertype>
<parametername>$default</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametertype>array</parametertype>
<parametername>$tokens</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametertype>null</parametertype>
<parametername>$field</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>string </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/storage/build/modular-all/develop/modular/code/traits/lang.php" line="29" column="1" bodyfile="/mnt/storage/build/modular-all/develop/modular/code/traits/lang.php" bodystart="29" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="df/df5/namespace_modular_1ab2b22986970c35d9a77cf2167c1ca4f5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Modular\fieldDecorationTokens</definition>
        <argsstring>()</argsstring>
        <name>fieldDecorationTokens</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Override to provide specific tokens for replacement in field decorations as [ &apos;token-name&apos; =&gt; value ] will be filled into decoration text placeholder {token-name}</para><para><simplesect kind="return"><para>array </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/storage/build/modular-all/develop/modular/code/traits/lang.php" line="75" column="1" bodyfile="/mnt/storage/build/modular-all/develop/modular/code/traits/lang.php" bodystart="75" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="df/df5/namespace_modular_1ab60bb783fca50876d3b5eec7c1cb928e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Modular\singularName</definition>
        <argsstring>()</argsstring>
        <name>singularName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/storage/build/modular-all/develop/modular/code/traits/lang.php" line="79" column="1" bodyfile="/mnt/storage/build/modular-all/develop/modular/code/traits/lang.php" bodystart="79" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="df/df5/namespace_modular_1ab91176b58e550e3dde2cc99cfca5a0b2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Modular\pluralName</definition>
        <argsstring>()</argsstring>
        <name>pluralName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/storage/build/modular-all/develop/modular/code/traits/lang.php" line="88" column="1" bodyfile="/mnt/storage/build/modular-all/develop/modular/code/traits/lang.php" bodystart="88" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="df/df5/namespace_modular_1a849be76b7f9b304b5b6f847914ff1066" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static Modular\get_site_localised_config_setting</definition>
        <argsstring>($source, $name, $default, array $data=[], $configOptions=null)</argsstring>
        <name>get_site_localised_config_setting</name>
        <param>
          <declname>$source</declname>
        </param>
        <param>
          <declname>$name</declname>
        </param>
        <param>
          <declname>$default</declname>
        </param>
        <param>
          <type>array</type>
          <declname>$data</declname>
          <defval>[]</defval>
        </param>
        <param>
          <declname>$configOptions</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a string from siteConfig.{$source$name} tokeised with $data, otherwise pass through to get_localised_config_string to look in lang file and config.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$source</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$name</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$default</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametertype>array</parametertype>
<parametername>$data</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametertype>null</parametertype>
<parametername>$configOptions</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>string </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/storage/build/modular-all/develop/modular/code/traits/lang.php" line="108" column="1" bodyfile="/mnt/storage/build/modular-all/develop/modular/code/traits/lang.php" bodystart="108" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="df/df5/namespace_modular_1ac7506e4ec381b314cfd445af3f533d32" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static Modular\get_localised_config_string</definition>
        <argsstring>($source, $name, $default, array $data=[], $configOptions=null)</argsstring>
        <name>get_localised_config_string</name>
        <param>
          <declname>$source</declname>
        </param>
        <param>
          <declname>$name</declname>
        </param>
        <param>
          <declname>$default</declname>
        </param>
        <param>
          <type>array</type>
          <declname>$data</declname>
          <defval>[]</defval>
        </param>
        <param>
          <declname>$configOptions</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a string from localised language files or config or default in order of checking existence.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$source</parametername>
</parameternamelist>
<parameterdescription>
<para>- classname localised too or config classname </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$name</parametername>
</parameternamelist>
<parameterdescription>
<para>- e.g. fieldname on object or message name in lang </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$default</parametername>
</parameternamelist>
<parameterdescription>
<para>- default to use if not found in lang or config </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametertype>array</parametertype>
<parametername>$data</parametername>
</parameternamelist>
<parameterdescription>
<para>- data for tokens in resulting string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametertype>null</parametertype>
<parametername>$configOptions</parametername>
</parameternamelist>
<parameterdescription>
<para>- options for config, e.g. Config.UNINHERITED </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>string </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/storage/build/modular-all/develop/modular/code/traits/lang.php" line="125" column="1" bodyfile="/mnt/storage/build/modular-all/develop/modular/code/traits/lang.php" bodystart="125" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="df/df5/namespace_modular_1aa42089f560392d3ce9c68fe183010543" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Modular\options</definition>
        <argsstring>($options=[], $merge=true)</argsstring>
        <name>options</name>
        <param>
          <declname>$options</declname>
          <defval>[]</defval>
        </param>
        <param>
          <declname>$merge</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get, set or update options.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametertype>array</parametertype>
<parametertype>null</parametertype>
<parametername>$options</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametertype>bool</parametertype>
<parametername>$merge</parametername>
</parameternamelist>
<parameterdescription>
<para>if false then what is passed overwrites existing if true then will be merged in (if an array) or logical ored (if an int) or set otherwise </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>null </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/storage/build/modular-all/develop/modular/code/traits/options.php" line="17" column="1" bodyfile="/mnt/storage/build/modular-all/develop/modular/code/traits/options.php" bodystart="17" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="df/df5/namespace_modular_1a4f16f6783118b5305a3cd271d603804e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Modular\option</definition>
        <argsstring>($name, $key=null)</argsstring>
        <name>option</name>
        <param>
          <declname>$name</declname>
        </param>
        <param>
          <declname>$key</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/storage/build/modular-all/develop/modular/code/traits/options.php" line="32" column="1" bodyfile="/mnt/storage/build/modular-all/develop/modular/code/traits/options.php" bodystart="32" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="df/df5/namespace_modular_1a0428161b66c885b01816982f1a8e5692" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Modular\hasRelationship</definition>
        <argsstring>($relationshipName)</argsstring>
        <name>hasRelationship</name>
        <param>
          <declname>$relationshipName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if a relationship is on the exhibiting class <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$relationshipName</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/storage/build/modular-all/develop/modular/code/traits/related.php" line="19" column="1" bodyfile="/mnt/storage/build/modular-all/develop/modular/code/traits/related.php" bodystart="19" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="df/df5/namespace_modular_1a89b171639eb5b84aa423822c163c914f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Modular\makeUploadField</definition>
        <argsstring>($relationshipName)</argsstring>
        <name>makeUploadField</name>
        <param>
          <declname>$relationshipName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return an upload field wrapped in a DisplayLogicWrapper as they all should be when using displaylogic.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>string</parametertype>
<parametername>$relationshipName</parametername>
</parameternamelist>
<parameterdescription>
<para>optional override the static field_name </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>\Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/storage/build/modular-all/develop/modular/code/traits/upload.php" line="23" column="1" bodyfile="/mnt/storage/build/modular-all/develop/modular/code/traits/upload.php" bodystart="23" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="df/df5/namespace_modular_1ad3267303429bf001abe95cb2ad8ad778" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Modular\configureUploadField</definition>
        <argsstring>($field, $configVarName= &apos;allowed_files&apos;)</argsstring>
        <name>configureUploadField</name>
        <param>
          <declname>$field</declname>
        </param>
        <param>
          <declname>$configVarName</declname>
          <defval>&apos;allowed_files&apos;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>UploadField</parametertype>
<parametertype>\DisplayLogicWrapper</parametertype>
<parametername>$field</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametertype>string</parametertype>
<parametername>$configVarName</parametername>
</parameternamelist>
<parameterdescription>
<para>- allow you to switch config to check e.g. &apos;allowed_video_files&apos; </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/storage/build/modular-all/develop/modular/code/traits/upload.php" line="37" column="1" bodyfile="/mnt/storage/build/modular-all/develop/modular/code/traits/upload.php" bodystart="37" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="df/df5/namespace_modular_1a83bd3e1e721645ae5cd530de2e2bfb0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Modular\uploadFolderName</definition>
        <argsstring>()</argsstring>
        <name>uploadFolderName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the path relative to assets/ for the particular media type, e.g &apos;videos&apos;, &apos;audio&apos; etc.</para><para>Uses config.allowed_files if not overriden by UploadFolderName const. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/storage/build/modular-all/develop/modular/code/traits/upload.php" line="101" column="1" bodyfile="/mnt/storage/build/modular-all/develop/modular/code/traits/upload.php" bodystart="101" bodyend="110"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Binds InternalLink and ExternalLink fields with a LinkType field and attaches associated behaviours (display logic etc).</para><para>A block which allows a <ref refid="de/d4d/namespace_modular_1_1_grid_list" kindref="compound">GridList</ref> to be placed on a page. The <ref refid="de/d4d/namespace_modular_1_1_grid_list" kindref="compound">GridList</ref> can have its own &apos;Curated&apos; or manually added blocks via the HasBlocks extension if added.</para><para>GridListBlocks</para><para>LinkedPage</para><para>InternalLink from  field.</para><para>Links</para><para>Links() from HasLinks extension, returns a list of InternalOrExternalLink models</para><para><ref refid="d3/d10/class_modular_1_1_application" kindref="compound">Application</ref> level exceptions should throw this, e.g. bad paths or database credentials.</para><para>A field which shows and validates a particular format, such as a phone number or registration number.</para><para>Provides CMS fields for customisation of a <ref refid="de/d4d/namespace_modular_1_1_grid_list" kindref="compound">GridList</ref> block or in-page <ref refid="de/d4d/namespace_modular_1_1_grid_list" kindref="compound">GridList</ref> if added directly.</para><para>Image represents a single attached image, this is a relationship so use RelationshipName and RelationshipClassName not SingleFieldName and SingleFieldSchema.</para><para>Adds a tag field representation of a HasManyMany relationship</para><para>Field represents a media file (e.g. Audio, Video etc) with a relationship called &apos;Media&apos;</para><para>Removes filters which don&apos;t exist in any items, should be added to <ref refid="de/d4d/namespace_modular_1_1_grid_list" kindref="compound">GridList</ref> host (e.g. GridListBlock).</para><para>This will be called by GridList.filters after all filter providers have added their filters.</para><para>Limits filters to only those defined on the page via config.gridlist_custom_filters (only if defined though otherwise no change)</para><para>Constrain items to only be those for the current filter as set e.g. on url filter= query parameter</para><para>Filters limit what models are displayed on page depending on user selection, they can further restrict models after Constraints are applied.</para><para>Standalone controller which services requests to e.g. &apos;/gridlist/blocks?path=...&amp;filter=...&amp;start=...&amp;limit=...&apos;</para><para>Add a field which allows the mode for the gridlist to be selected, if the mode is provided elsewhere then that will be the value instead and it can not be changed.</para><para>Add extensions to models which provide items, filters and other control to a <ref refid="de/d4d/namespace_modular_1_1_grid_list" kindref="compound">GridList</ref>.</para><para>Interface ItemsSequencer called by <ref refid="de/d4d/namespace_modular_1_1_grid_list" kindref="compound">GridList</ref> after retrieving all items and filters, used to order or otherwise decorate filters.</para><para>Interface ItemsSequencer called by <ref refid="de/d4d/namespace_modular_1_1_grid_list" kindref="compound">GridList</ref> when building items to re-arrange items or to inject items at a specific place in the list.</para><para>Interface TempleDataProvider for extensions which provide additional data to be returned to the template by the &apos;<ref refid="de/d4d/namespace_modular_1_1_grid_list" kindref="compound">GridList</ref>&apos; method.</para><para>Extension to add to a <ref refid="de/d4d/namespace_modular_1_1_grid_list" kindref="compound">GridList</ref> view model to hard-wire a particular <ref refid="de/d4d/namespace_modular_1_1_grid_list" kindref="compound">GridList</ref> view for the current page. Should be added after e.g. <ref refid="df/df5/namespace_modular" kindref="compound">Modular</ref> field which allows mode selection.</para><para>Allows filters to be explicitly set on a page-by-page basis by setting config.gridlist_custom_filters on a page model.</para><para>Returns all filters (GridListFilter models) from the database.</para><para>Add to a <ref refid="de/d4d/namespace_modular_1_1_grid_list" kindref="compound">GridList</ref> host (e.g. GridListBlock) to provide all items across the site which match the filters added to the block. Add a field which enables this to be enabled/disabled in CMS.</para><para>Add to a <ref refid="de/d4d/namespace_modular_1_1_grid_list" kindref="compound">GridList</ref> host (e.g. GridListBlock) to provide all children of the page on which the block is added. Adds a field which enables this to be enabled/disabled in CMS.</para><para>Provide all pages which have been related to this page via the &apos;RelatedPages&apos; tab. Adds a field which enables this to be enabled/disabled in CMS.</para><para>Add blocks manually to a grid list items at the start.</para><para>Provides a tag field where filters can be added.</para><para>GridListFilters()</para><para>Iterates through filters and adds an item count of items for that filter, for use by pagination, badges etc.</para><para>Adds an excerpt of items with a filter of &apos;all&apos;</para><para>Constrain count of items by filter to the page length</para><para>PageLength extension limits the number of items to the PageLength parameter, this is an overall limit which can be applied first when retrieving items from the database, and then again for example for pagination</para><para>Declare an interface for exceptions for RTTI and type-hinting, inspection reports etc</para><para>Interface HasLinks for models which have one or more links, either internal or external.</para><para>Interface LinkType implemented by models which can be linked to with different link types, such as a &apos;Download&apos;, &apos;Page&apos; or &apos;Video&apos;</para><para>Add a single related page field.</para><para>RelatedPages</para><para>RelatedPages</para><para>Adds a multiple free text Tags relationship TagField to Tag model to extended model.</para><para>Provides items which match fulltext parameter &apos;q&apos;</para><para>Add some search specific functionality to the standard gridlist.</para><para><ref refid="d1/da3/class_modular_1_1_model_extension" kindref="compound">ModelExtension</ref></para><para>Provides items which match &apos;tags&apos; query paramter as ModelTags - tags can be a csv list of ModelTags.</para><para>Calls through to JSON class while traits are worked out properly in SS (config is applied?)</para><para>owned, has an owner and invoking this object will invoke the call on the owner, e.g. $this()-&gt;doSomething() will call $this-&gt;owner()-&gt;doSomething()</para><para>Tools for dealing with relationships in SilverStripe</para><para>Trait adds functionality for dealing with upload fields </para>    </detaileddescription>
    <location file="[generated]" line="1" column="1"/>
  </compounddef>
</doxygen>
