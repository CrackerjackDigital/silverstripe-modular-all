<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="de/da6/_type_8php" kind="file">
    <compoundname>Type.php</compoundname>
    <innerclass refid="d1/dbe/class_modular_1_1_type" prot="public">Modular::Type</innerclass>
    <innernamespace refid="df/df5/namespace_modular">Modular</innernamespace>
    <innernamespace refid="d9/d4b/namespace_modular_1_1_fields_1_1_code">Modular::Fields::Code</innernamespace>
    <innernamespace refid="de/d4d/namespace_modular_1_1_traits_1_1debugging">Modular::Traits::debugging</innernamespace>
    <innernamespace refid="d3/df1/namespace_modular_1_1_traits_1_1reflection">Modular::Traits::reflection</innernamespace>
    <innernamespace refid="d6/dc4/namespacedebugging">debugging</innernamespace>
    <innernamespace refid="d5/de2/namespacereflection">reflection</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal">&lt;?php</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Modular;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal">use<sp/>Modular\Fields\Code;</highlight></codeline>
<codeline lineno="5"><highlight class="normal">use<sp/>Modular\Traits\debugging;</highlight></codeline>
<codeline lineno="6"><highlight class="normal">use<sp/>Modular\Traits\reflection;</highlight></codeline>
<codeline lineno="7"><highlight class="normal">use<sp/><ref refid="dd/dc2/interface_modular_1_1_types_1_1_type" kindref="compound">Modular\Types\Type</ref><sp/>as<sp/>TypeInterface;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="d1/dbe/class_modular_1_1_type" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d1/dbe/class_modular_1_1_type" kindref="compound">Type</ref><sp/></highlight><highlight class="keyword">extends</highlight><highlight class="normal"><sp/>\DataObject<sp/>implements<sp/>TypeInterface<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>use<sp/>debugging;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>use<sp/>reflection;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="d1/dbe/class_modular_1_1_type_1a9aac7e1475efe923de4e19cc2511f092" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/><ref refid="d1/dbe/class_modular_1_1_type_1a9aac7e1475efe923de4e19cc2511f092" kindref="member">__invoke</ref>()<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>$this;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="21" refid="d1/dbe/class_modular_1_1_type_1a74fc8d457a9fe7f9dd8c21afc3b5910d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/><ref refid="d1/dbe/class_modular_1_1_type_1a74fc8d457a9fe7f9dd8c21afc3b5910d" kindref="member">type</ref>()<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>static::strip_namespace();</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="d1/dbe/class_modular_1_1_type_1a239b1c70258014a86569483c2d009de6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/><ref refid="d1/dbe/class_modular_1_1_type_1a239b1c70258014a86569483c2d009de6" kindref="member">create</ref>()<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>\Injector::inst()-&gt;createWithArgs(static::config()-&gt;</highlight><highlight class="keyword">get</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&apos;injector_name&apos;</highlight><highlight class="normal">)<sp/>?:<sp/>get_called_class(),<sp/>func_get_args());</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="d1/dbe/class_modular_1_1_type_1afe6cf403f39e693b46948bc6d57e83dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/><ref refid="d1/dbe/class_modular_1_1_type_1afe6cf403f39e693b46948bc6d57e83dc" kindref="member">class_name</ref>()<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get_called_class();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="d1/dbe/class_modular_1_1_type_1af9aa034ad033005279bd790155e683fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/><ref refid="d1/dbe/class_modular_1_1_type_1af9aa034ad033005279bd790155e683fa" kindref="member">onBeforeWrite</ref>()<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent::onBeforeWrite();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$this-&gt;ClassName<sp/>=<sp/>get_class($this);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="d1/dbe/class_modular_1_1_type_1ac344a161b9bb2eaaecc689b2e5f62c2b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/><ref refid="d1/dbe/class_modular_1_1_type_1ac344a161b9bb2eaaecc689b2e5f62c2b" kindref="member">get_by_code</ref>($code)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>static::get()-&gt;filter(Code::SingleFieldName,<sp/>$code)-&gt;first();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/mnt/storage/build/modular-all/develop/modular-types/code/Type.php"/>
  </compounddef>
</doxygen>
